load('03.mat');n = length(y);tau = 25; % rand() * 100;cvx_begin    variables v(n)    minimize norm(y - v, 1) + tau * norm(v(2:end) - v(1:end-1), 1)cvx_endD = zeros(n - 1, n);D(1:n-1, 1:n-1) = -eye(n-1);D(:, 2:n) = D(:, 2:n) + eye(n - 1);cvx_begin    variables v(n, 1) e(n, 1) delta(n - 1, 1)    expressions c(3 * n - 1, 1) x(3*n - 1, 1) A(4 * n - 2, 3 * n - 1) b(4 * n - 2, 1)    % c = zeros(3 * n - 1, 1);    c(n + 1:2 * n, 1) = ones(n, 1);    c(2 * n + 1:3 * n - 1, 1) = tau * ones(n - 1, 1);        % x = zeros(3 * n - 1, 1);    x(1:n, 1) = v;    x(n+1:2*n, 1) = e;    x(2*n+1:end, 1) = delta;    b = zeros(4 * n - 2, 1);    b(1:n, 1) = -y;    b(n+1:2*n, 1) = y;    A = zeros(4 * n - 2, 3 * n - 1);    A(1:n, 1:n) = -eye(n);    A(1:n, n+1:2*n) = -eye(n);    A(n+1:2*n, 1:n) = eye(n);    A(n+1:2*n, n+1:2*n) = -eye(n);    A(2*n+1:3*n-1, 1:n) = -D;    A(3*n:4*n-2, 1:n) = D;    A(2*n+1:3*n-1, 2*n+1:3*n-1) = -eye(n-1);    A(3*n:4*n-2, 2*n+1:3*n-1) = -eye(n-1);    minimize(c' * x)    subject to        A*x <= bcvx_endscatter(t, y, 'Marker', 'o', 'MarkerEdgeColor', [0.5, 0.5, 0.5]);hold on;plot(t, double(v), 'r-', 'LineWidth', 2);hold off;